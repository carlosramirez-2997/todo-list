<%- include('../includes/head.ejs') %>
<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js'></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            events: <%- events %>,
            eventClick: function(event, jsEvent, view) {

                var eventTitle = event.event.title;
                var eventStart = event.event.start.toLocaleString();
                var eventEnd = event.event.end ? event.event.end.toLocaleString() : "No End Time";

                document.getElementById('modalContent').innerHTML = `
                    <p><strong>Title:</strong> ${eventTitle}</p>
                    <p><strong>Start:</strong> ${eventStart}</p>
                    <p><strong>End:</strong> ${eventEnd}</p>
                `;

                document.getElementById('task-detail-modal').classList.remove('hidden');
            },
            dateClick: function(event, jsEvent, view) {
                document.getElementById("title").value = '';

                const startDate = event.date;
                startDate.setMinutes(startDate.getMinutes() - startDate.getTimezoneOffset());

                const endTime = new Date(startDate);
                endTime.setMinutes(endTime.getMinutes() + 30);

                document.getElementById("start").value = startDate.toISOString().slice(0, 16);
                document.getElementById("end").value = endTime.toISOString().slice(0, 16);

                document.getElementById('create-task-modal').classList.remove('hidden');
            },
            editable: true,
            droppable: true,
            selectable: true
        });
        calendar.render();
    });
</script>

<style>
    #calendar {
        max-width: 100%;
        height: 80vh;
        margin: 5vh auto;
        overflow: hidden;
    }
</style>

</head>

<body>
    <%- include('../includes/navigation.ejs') %>
    <main class="pt-[60px]">
        <div id='calendar'></div>

        <div id="create-task-modal" tabindex="-1" aria-hidden="true" class="hidden fixed inset-0 z-50 flex justify-center items-center bg-black bg-opacity-50">
            <div class="relative p-4 w-full max-w-md max-h-full">
                <!-- Modal content -->
                <div class="relative bg-white rounded-lg shadow-sm dark:bg-gray-700">
                    <!-- Modal header -->
                    <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600 border-gray-200">
                        <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
                            Create Task
                        </h3>
                        <button type="button" class="close-form-modal-act end-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-hide="authentication-modal">
                            <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                            </svg>
                            <span class="sr-only">Close modal</span>
                        </button>
                    </div>
                    <!-- Modal body -->
                    <div class="p-4 md:p-5">
                        <form id="task-form" class="space-y-4" action="/tasks" method="POST">
                            <div>
                                <label for="title" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Title</label>
                                <input type="text" name="title" id="title" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" placeholder="Cook cake" required />
                            </div>
                            <div>
                                <label for="start" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Start Date</label>
                                <input type="datetime-local" name="start" id="start" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" required />
                            </div>
                            <div>
                                <label for="end" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">End Date</label>
                                <input type="datetime-local" name="end" id="end" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" required />
                            </div>
                            <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                            <button type="submit" class="close-form-modal-act w-full text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Create Task</button>
                        </form>
                    </div>
                </div>
            </div>
        </div> 

        <div id="task-detail-modal" tabindex="-1" aria-hidden="true" class="hidden fixed inset-0 z-50 flex justify-center items-center bg-black bg-opacity-50">
            <div class="relative p-4 w-full max-w-2xl max-h-full bg-white rounded-lg shadow-lg dark:bg-gray-700">

                <div class="relative bg-white rounded-lg shadow-sm dark:bg-gray-700">

                    <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600 border-gray-200">
                        <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
                            Task Detail
                        </h3>
                        <button type="button" class="close-detail-modal-act text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-hide="default-modal">
                            <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                            </svg>
                            <span class="sr-only">Close modal</span>
                        </button>
                    </div>

                    <div id="modalContent" class="p-4 md:p-5 space-y-4">
                        
                    </div>

                    <div class="flex items-center p-4 md:p-5 border-t border-gray-200 rounded-b dark:border-gray-600">
                        <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                        <button type="button" class="close-detail-modal-act text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </main>
    <script>
        const closeDetailModalButtons = document.querySelectorAll('.close-detail-modal-act');

        closeDetailModalButtons.forEach(button => {
            button.addEventListener('click', function() {
                const detailModal = document.getElementById('task-detail-modal');
                if (detailModal) {
                    detailModal.classList.add('hidden');
                }
            });
        });

        const closeFormModalButton = document.querySelectorAll('.close-form-modal-act');

        closeFormModalButton.forEach(button => {
            button.addEventListener('click', function() {
                const formModal = document.getElementById('create-task-modal');
                if (formModal) {
                    formModal.classList.add('hidden');
                }
            });
        });
    </script>

<%- include('../includes/end.ejs') %>